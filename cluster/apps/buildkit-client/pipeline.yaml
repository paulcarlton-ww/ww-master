---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-image
  namespace: tekton
spec:
  description: |
    clone repo and build image
  params:
  - name: repo-url
    type: string
    description: The git repository URL to clone from.
  - name: branch-name
    type: string
    description: The git branch to clone.
  - name: dockerfile
    type: string
  - name: builder-image
    type: string
  - name: target-image
    type: string
  - name: buildkit-daemon
    type: string
  - name: client-certs
    type: string
  workspaces:
  - name: shared-data
    description: |
      This workspace will receive the cloned git repo and be passed
      to the next Task for the image to be built.
  resources:
    outputs:
    - name: image
      type: image-type
  tasks:
  - name: fetch-repo
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
    params:
    - name: url
      value: $(params.repo-url)
    - name: revision
      value: $(params.branch-name)
  - name: build
    runAfter: ["fetch-repo"]
    taskRef:
      name: buildkit
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: registry-creds
    resources:
      inputs:
        - name: source
          resource: shared-data
        - name: dockerconfig
          resource: registry-creds
      outputs:
        - name: image
          resource: target-image
    params:
    - name: DOCKERFILE
      value: $(params.dockerfile)
    - name: BUILDKIT_CLIENT_IMAGE
      value: $(params.builder-image)
    - name: BUILDKIT_DAEMON_ADDRESS
      value: $(params.buildkit-daemon)
    - name: BUILDKIT_CLIENT_CERTS
      value: $(params.client-certs)
---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: clone-build
  namespace: tekton
spec:
  podTemplate:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: "tekton.dev/pipelineRun"
              operator: In
              values:
              - clone-build
          topologyKey: kubernetes.io/hostname
  pipelineRef:
    name: build-image
  workspaces:
  - name: shared-data
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: registry-creds
    secret:
      secretName: docker-creds
  params:
  - name: repo-url
    value: https://github.com/paulcarlton-ww/kraan.git
  - name: branch-name
    value: master
  - name: builder-image
    value: moby/buildkit:master-rootless
  - name: buildkit-daemon
    value: buildkit:tcp://buildkitd:1234
  - name: client-certs
    value: buildkit:buildkit-client-certs
  - name: dockerfile
    value: ./Dockerfile
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: target-image
  namespace: tekton
spec:
  type: image
  params:
    - name: url
      value: pcarlton/kraan:3.0.0-dev